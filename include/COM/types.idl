cpp_quote("/*");
cpp_quote(" * libcom: An implementation of the Component Object Model");
cpp_quote(" * @(#) $Id$");
cpp_quote(" */");
cpp_quote("");
cpp_quote("/*");
cpp_quote(" * Copyright (c) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Mo McRoberts.");
cpp_quote(" *");
cpp_quote(" * Redistribution and use in source and binary forms, with or without");
cpp_quote(" * modification, are permitted provided that the following conditions");
cpp_quote(" * are met:");
cpp_quote(" * 1. Redistributions of source code must retain the above copyright");
cpp_quote(" *    notice, this list of conditions and the following disclaimer.");
cpp_quote(" * 2. Redistributions in binary form must reproduce the above copyright");
cpp_quote(" *    notice, this list of conditions and the following disclaimer in the");
cpp_quote(" *    documentation and/or other materials provided with the distribution.");
cpp_quote(" * 3. The names of the author(s) of this software may not be used to endorse");
cpp_quote(" *    or promote products derived from this software without specific prior");
cpp_quote(" *    written permission.");
cpp_quote(" *");
cpp_quote(" * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,");
cpp_quote(" * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY");
cpp_quote(" * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL");
cpp_quote(" * AUTHORS OF THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,");
cpp_quote(" * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED");
cpp_quote(" * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR");
cpp_quote(" * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF");
cpp_quote(" * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING");
cpp_quote(" * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS");
cpp_quote(" * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.");
cpp_quote(" */");
cpp_quote("");
cpp_quote("# ifndef COM_COM_H_");
cpp_quote("#  error Do not include this file directly; use <COM/COM.h> instead.");
cpp_quote("# endif");

[pointer_default(ptr)]
interface COMTypes
{

	/* A COM GUID is slightly different to a DCE UUID, although remains
	 * binary-compatible. data1 is time_low, data2 is time_mid, data3 is
	 * time_hi_and_version, data4[0] is clock_seq_hi_and_reserved,
	 * data4[1] is clock_seq_low, and the remaining six members of data4
	 * are node.
	 */
	typedef struct com_guid_struct
	{
		unsigned long data1;
		unsigned small data2;
		unsigned small data3;
		byte data4[8];
	} com_guid_t, com_iid_t, com_clsid_t;

	typedef struct com_guid_struct com_guid_t;
	typedef long com_result_t;

	typedef boolean com_bool_t;
	typedef unsigned long com_size_t;

	cpp_quote("# if defined(__cplusplus)");
	cpp_quote("typedef const com_iid_t &com_riid_t;");
	cpp_quote("typedef const com_clsid_t &com_rclsid_t;");
	cpp_quote("# else");
	cpp_quote("typedef const com_iid_t *com_riid_t;");
	cpp_quote("typedef const com_clsid_t *com_rclsid_t;");
	cpp_quote("#endif");

	/* Make the identifiers available early so the interfaces we define can
	 * specify that they pass pointers to them ahead of us defining what
	 * they actually are.
	 */

	typedef struct com_rco_struct com_rco_t;
	typedef struct com_server_struct com_server_t;
	typedef struct com_multiqi_struct com_multiqi_t;

	typedef enum com_context_enum
	{
		COM_CTX_INPROC_SERVER = 1,
		COM_CTX_INPROC_HANDLER = 2,
		COM_CTX_LOCAL_SERVER = 4,
		COM_CTX_RESERVED1 = 8,
		COM_CTX_REMOTE_SERVER = 16,
	
		COM_CTX_INPROC = 3,
		COM_CTX_SERVER = 21,
		COM_CTX_ALL = 23
	} com_context_t;


cpp_quote("# undef DEFINE_GUID");
cpp_quote("# define DEFINE_GUID(name, l, w1, w2, b1, b2, b3, b4, b5, b6, b7, b8) RPC_EXTERNC const com_guid_t name");

cpp_quote("# if defined(__cplusplus)");
cpp_quote("#  define com_guid_equal(a, b) (!memcmp(&(a), &(b), sizeof(com_guid_t)))");
cpp_quote("# else");
cpp_quote("#  define com_guid_equal(a, b) (!memcmp(a, b, sizeof(com_guid_t)))");
cpp_quote("# endif");

}

